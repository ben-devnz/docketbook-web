rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check user's role
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    // Users can only read their own profile
    match /users/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if false; // Only admins should modify users (handle via Cloud Functions)
    }
    
    // Anyone authenticated can read branches
    match /branches/{branchId} {
      allow read: if isAuthenticated();
      allow write: if false; // Managed via console/functions only
    }
    
    // Customers - read only for authenticated users
    match /customers/{customerId} {
      allow read: if isAuthenticated();
      allow write: if false; // Synced from Cin7 via Cloud Functions
    }
    
    // Products - read only for authenticated users
    match /products/{productId} {
      allow read: if isAuthenticated();
      allow write: if false; // Synced from Cin7 via Cloud Functions
    }
    
    // Orders - users can only access orders from their branches
    match /orders/{orderId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if false; // Orders shouldn't be modified after creation
    }
    
    // Docket counters - read only, modified by Cloud Functions
    match /docketCounters/{branchId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only Cloud Functions can update counters
    }
  }
}